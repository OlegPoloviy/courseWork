# üå± –ï—Ç–∞–ø 1: Build stage
FROM node:20-alpine AS builder

WORKDIR /app

# –ö–æ–ø—ñ—é—î–º–æ —Ñ–∞–π–ª–∏ –∑–∞–ª–µ–∂–Ω–æ—Å—Ç–µ–π –¥–ª—è –∫—Ä–∞—â–æ–≥–æ –∫–µ—à—É–≤–∞–Ω–Ω—è —à–∞—Ä—ñ–≤
COPY package*.json ./
COPY yarn.lock* ./

# –í—Å—Ç–∞–Ω–æ–≤–ª—é—î–º–æ –∑–∞–ª–µ–∂–Ω–æ—Å—Ç—ñ (–≤–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—î–º–æ yarn —è–∫—â–æ —î yarn.lock)
RUN if [ -f yarn.lock ]; then yarn install --frozen-lockfile; else npm ci --legacy-peer-deps; fi

# –ö–æ–ø—ñ—é—î–º–æ —É–≤–µ—Å—å –∫–æ–¥
COPY . .

RUN if [ -f prisma/schema.prisma ]; then npx prisma generate; fi

# –ö–æ–º–ø—ñ–ª—é—î–º–æ TypeScript
RUN if [ -f yarn.lock ]; then yarn build; else npm run build; fi

# üöÄ –ï—Ç–∞–ø 2: Runtime stage
FROM node:20-alpine AS production

# –°—Ç–≤–æ—Ä—é—î–º–æ non-root –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞ –¥–ª—è –±–µ–∑–ø–µ–∫–∏
RUN addgroup -g 1001 -S nodejs && \
    adduser -S nestjs -u 1001

WORKDIR /app

# –í—Å—Ç–∞–Ω–æ–≤–ª—é—î–º–æ —Ç—ñ–ª—å–∫–∏ production –∑–∞–ª–µ–∂–Ω–æ—Å—Ç—ñ
COPY package*.json ./
COPY yarn.lock* ./

RUN if [ -f yarn.lock ]; then \
        yarn install --frozen-lockfile --production && yarn cache clean; \
    else \
        npm ci --only=production --legacy-peer-deps && npm cache clean --force; \
    fi

# –ì–µ–Ω–µ—Ä—É—î–º–æ Prisma –∫–ª—ñ—î–Ω—Ç –¥–ª—è production
RUN if [ -f prisma/schema.prisma ]; then npx prisma generate; fi

# –ö–æ–ø—ñ—é—î–º–æ –∑—ñ–±—Ä–∞–Ω–∏–π –∫–æ–¥ –∑ builder stage
COPY --from=builder --chown=nestjs:nodejs /app/dist ./dist

# –ö–æ–ø—ñ—é—î–º–æ prisma —Å—Ö–µ–º—É —è–∫—â–æ —î
COPY --chown=nestjs:nodejs prisma* ./prisma/

# –ö–æ–ø—ñ—é—î–º–æ package.json –¥–ª—è –º–µ—Ç–∞–¥–∞–Ω–∏—Ö
COPY --chown=nestjs:nodejs package.json ./

# –ü–µ—Ä–µ–º–∏–∫–∞—î–º–æ—Å—è –Ω–∞ non-root –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞
USER nestjs

# –í–∏—Å—Ç–∞–≤–ª—è—î–º–æ –ø–æ—Ä—Ç
EXPOSE 3001

# –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ –∑–¥–æ—Ä–æ–≤'—è –∑–∞—Å—Ç–æ—Å—É–Ω–∫—É
HEALTHCHECK --interval=30s --timeout=3s --start-period=5s --retries=3 \
    CMD node --eval "const http = require('http'); http.get('http://localhost:3000/health', (res) => { process.exit(res.statusCode === 200 ? 0 : 1) }).on('error', () => process.exit(1))"

# –ó–∞–ø—É—Å–∫–∞—î–º–æ NestJS –∑–∞—Å—Ç–æ—Å—É–Ω–æ–∫
CMD ["node", "dist/main"]